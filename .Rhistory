help git
?git
install.packages("devtools")
git
?git
git add
h<-1
h
install.packages("devtools")
devtools::install_github("username/packagename")
devtools::install_github("username/packagename")
git add
?git
git pudh
git push
ZHVI <- fread("http://files.zillowstatic.com/research/public/Zip/Zip_Zhvi_AllHomes.csv")
?fread
library(data.table,lib.loc = "C:/Users/Kelvin/Desktop/R - Programming")
ZHVI <- fread("http://files.zillowstatic.com/research/public/Zip/Zip_Zhvi_AllHomes.csv")
ZHVI
getwd
getwd()
library(data.table)
source("Ranking Functions.R")
metro = 'Orlando' # Metro area of Interest
ZHVI <- fread("http://files.zillowstatic.com/research/public/Zip/Zip_Zhvi_AllHomes.csv")
Matches<-grepl(metro,ZHVI$Metro) # Logical with matches to the Metro
cat(sum(Matches,na.rm = TRUE),"Matches in the Metro",metro)
Matched_subset <- ZHVI[Matches]
Data <- Matched_subset[,6:236,with=FALSE]
# apply opertations to find yearly averages
start <- substring(names(Data)[1],1,4)
end   <- substring(names(Data)[length(Data)],1,4)
yr <- as.character(start:end)
indices <- lapply(yr,grepl,names(Data))               # Find indicies pertaining to yr
avg_data<-data.table(Matched_subset[,1:4,with=FALSE]) # Initialize avg_data table
for (i in seq_len(NROW(indices))) {
yy<-data.matrix(Data[,indices[[i]],with=FALSE])  # For each year, grab all the months
avg_data[,yr[i]]<-rowMeans(yy)                   # Average all the months for that year
}
avg_data
Output <- Rank_zips(avg_data)
Output
Matches<-grepl(metro,ZHVI$Metro) # Logical with matches to the Metro
cat(sum(Matches,na.rm = TRUE),"Matches in the Metro",metro)
Matched_subset <- ZHVI[Matches]
Data <- Matched_subset[,6:236,with=FALSE]
# apply opertations to find yearly averages
start <- substring(names(Data)[1],1,4)
end   <- substring(names(Data)[length(Data)],1,4)
yr <- as.character(start:end)
indices <- lapply(yr,grepl,names(Data))               # Find indicies pertaining to yr
avg_data<-data.table(Matched_subset[,1:4,with=FALSE]) # Initialize avg_data table
for (i in seq_len(NROW(indices))) {
yy<-data.matrix(Data[,indices[[i]],with=FALSE])  # For each year, grab all the months
avg_data[,yr[i]]<-rowMeans(yy)                   # Average all the months for that year
}
# Identify the Best RegionName (Zip-code) to live in
Output <- Rank_zips(avg_data)
Output
D <- t(avg_data)    # Transpose Data
Zips <- D[1,]       # Pull off the ZipCodes
CSM <- D[2:4,]      # Pull off City,State,Metro
D <- D[-1:-4,]      # Take away categorical data
class(D)<-"numeric"
Yearz <- as.numeric(rownames(D))
output <- matrix(ncol=3, nrow=length(Zips))
for (i in seq_len(NCOL(D))) {
ff <- D[,i] ~ Yearz
Fit <- lm(ff)
output[i,1]<-summary(Fit)$coefficients[2]
PostCrash <- D[-1:-15,i] ~ Yearz[-1:-15]
PC <- lm(PostCrash)
output[i,2]<-summary(PC)$coefficients[2]
}
output[,3]<-t(colMeans(D,na.rm =TRUE))
output <- data.frame(output)      # Turn matrix into a dataframe
rownames(output)<-Zips            # Update column names to be Zipcodes
colnames(output)<- c("slopePRE","slopePOST","avgZHVI")
output<-cbind(output,t(CSM))      # Add in columns with city,state,metro
output<-sort(output,by="slopePOST",decreasing=TRUE)
output
invisible(output)
output
Output <- Rank_zips(avg_data)
Output
Output
git
?git
source('C:/Users/Kelvin/Desktop/R - Programming/New-Home-Search-ZHVI-/Ranking Functions.R')
library(devtools)
install.github(kfcwifi/New-Home-Search-ZHVI-)
devtools::install_github("kfcwifi/New-Home-Search-ZHVI-")
git commit -a
git2r::commit()
git2r::commit("Master File.R")
git2r::commit("./Master File.R")
git2r::commit(./Master File.R)
git2r::commit(Master File.R)
github_pull()
